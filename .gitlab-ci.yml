include:
  - template: Security/License-Management.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

variables:
  SAST_DEFAULT_ANALYZERS: "gosec,secrets"

stages:
  - test
  - lint
  - security
  - build
  - package
  - publish
  - docker

lint:
  image: golangci/golangci-lint:v1.26.0
  stage: test
  allow_failure: true
  script:
    - golangci-lint run --out-format=junit-xml --timeout=10m > golangci-output.xml
  artifacts:
    reports:
      junit: golangci-output.xml

.on-non-tag:
  except:
    - tags

.go-builder:
  extends: .on-non-tag
  image: alpine:3.11
  before_script:
    - apk update
    - apk add go git make
    - go get -u github.com/jstemmer/go-junit-report

build:
  extends: .go-builder
  stage: build
  script:
    - make static_release
  artifacts:
    paths:
      - ./lightmeter
    expire_in: 7 days

test:
  extends: .go-builder
  stage: test
  script:
    - ./utils/go_test.sh -v 2>&1 | ~/go/bin/go-junit-report > report.xml
  artifacts:
    reports:
      junit: report.xml

cover:
  extends: .go-builder
  stage: test
  script:
    - go get -u github.com/t-yuki/gocover-cobertura
    - ./utils/go_test.sh -coverprofile=coverinfo.txt
    - go run github.com/t-yuki/gocover-cobertura < coverinfo.txt > cobertura.xml
    - go tool cover -html=coverinfo.txt -o coverage.html
    - go tool cover -func=coverinfo.txt
  coverage: /^total:\s+.*\s(\d+\.\d+)%$/
  artifacts:
    reports:
      cobertura: cobertura.xml
    paths:
      - coverage.html
    expire_in: 7 days

publish-release:
  extends: .on-non-tag
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli
  when: manual
  script:
    - ./ci/release_on_gitlab.sh

license_management:
  extends: .on-non-tag
  stage: test

sast:
  extends: .on-non-tag
  stage: test 

dependency_scanning:
  extends: .on-non-tag
  stage: test

code_quality:
  extends: .on-non-tag
  stage: test
  only:
    refs:
      - branches

license_scanning:
  extends: .on-non-tag
  stage: test

publish-docker-image:
  only:
    - tags
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: docker
  script:
    - sh ci/publish_docker_image.sh
