include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

stages:
  - test
  - extra

lint:
  image: golangci/golangci-lint:v1.26.0
  stage: extra
  allow_failure: true
  script:
    - golangci-lint run --out-format=junit-xml > golangci-output.xml
  artifacts:
    reports:
      junit: golangci-output.xml

.go-builder:
  image: golang:1.14.2-alpine3.11
  before_script:
    - apk update
    - apk add gcc libc-dev

test:
  extends: .go-builder
  stage: test
  script:
    - go test -coverpkg=gitlab.com/lightmeter/postfix-log-parser,gitlab.com/lightmeter/postfix-log-parser/rawparser -v 2>&1 | go run github.com/jstemmer/go-junit-report > report.xml
  artifacts:
    reports:
      junit: report.xml

cover:
  stage: test
  extends: .go-builder
  script:
    - go test -coverpkg=gitlab.com/lightmeter/postfix-log-parser,gitlab.com/lightmeter/postfix-log-parser/rawparser -coverprofile=coverinfo.txt
    - go tool cover -func=coverinfo.txt
  coverage: /^total:\s+.*\s(\d+\.\d+)%$/
  artifacts:
    paths:
      - coverinfo.txt
    expire_in: 1 hour

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

sonarcloud-check:
  dependencies:
    - cover
  stage: extra
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  rules:
    - if: '$CI_MERGE_REQUEST_EVENT_TYPE == "detached"'
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: always
